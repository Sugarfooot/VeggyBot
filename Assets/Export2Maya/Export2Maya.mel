// --------------------------------------------------
// Create Export2Maya Menu
// --------------------------------------------------
global proc Export2Maya(){
	// Build Scripts Menu
	if(`menu -exists Export2Maya`) catch(`deleteUI Export2Maya`);
	menu -label Export2Maya -tearOff 1 -parent MayaWindow Export2Maya;
	menuItem -d 1;
	menuItem -label "Setup Lightmap Baking" -c "SetupLightmapBaking()";
}


// --------------------------------------------------
// Prepare Scene for Lightmap Baking
// --------------------------------------------------
global proc SetupLightmapBaking(){
	// Clear the selection
	select -cl;
	
	// Parent all transforms to the World (unparent everything)
	string $o[] = `ls -dag -type transform`;
	for($i=size($o)-1; $i>-1; $i--){
		string $parent[] = `listRelatives -p $o[$i]`;
		if(size($parent)>0) parent -w $o[$i];
	}

	// Get list of display layers
	string $layer[] = `ls -type displayLayer`;

	// Go through each display layer
	for($i=0; $i<size($layer); $i++){
		// Get list of objects attached to the layer
		string $meshes[] = `listConnections -s 0 -d 1 $layer[$i]`;
		
		// Select all the objects that belong to this layer
		select $meshes;
		
		// Combine the meshes
		if(size($meshes) > 1){
			polyUnite -ch 0 -mergeUVSets 1 -n ($layer[$i]+"_mesh") $meshes;
		}
		else{
			// Rename the combined mesh
			if(`objExists $meshes[0]`) rename $meshes[0] ($layer[$i]+"_mesh");
		}
	}
}

/*
// This would be your existing Lambert Material
string $shaders[] = `ls -sl -fl`;

// This would be the desired Material type
string $replaceType = "VRayMtl";

for($i=0; $i<size($shaders); $i++){
	string $replaceWith = `createNode $replaceType`;
	replaceNode $shaders[$i] $replaceWith;
	delete $shaders[$i];
	rename $replaceWith $shaders[$i];
}
*/